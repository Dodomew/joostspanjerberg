// Typography

@import url('https://fonts.googleapis.com/css?family=Open+Sans:300,400,600'); // 400 ook erbij

// Color
$header-container-color: #f2f2f2;

// Media queries for responsive layout
$min-mobile-size: 240px;
$max-mobile-size: 767px; //image size
$min-tablet-size: 768px;
$max-tablet-size: 1024px; //image size
$min-landscape-tablet-size: 1025px;
$max-landscape-tablet-size: 1366px; //image size
$min-tablet-nexus-size: 600px;
$max-tablet-nexus-size: 960px;

@mixin displayFlex($justify, $align-items)
{
  // display: -webkit-box;  // iPhone fallback set on specific elements, otherwise this gets overwritten by display:flex
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-justify-content: $justify;
  justify-content: $justify;
  -webkit-align-items: $align-items;
  align-items: $align-items;
}

// https://github.com/mastastealth/sass-flex-mixin/blob/master/_flex.scss
@mixin flex($fg: 1, $fs: null, $fb: null)
{
	// Set a variable to be used by box-flex properties
	$fg-boxflex: $fg;

	// Box-Flex only supports a flex-grow value so let's grab the
	// first item in the list and just return that.
	@if type-of($fg) == 'list'
  {
		$fg-boxflex: nth($fg, 1);
	}

	-webkit-box-flex: $fg-boxflex;
	-webkit-flex: $fg $fs $fb;
	-moz-box-flex: $fg-boxflex;
	-moz-flex: $fg $fs $fb;
	-ms-flex: $fg $fs $fb;
	flex: $fg $fs $fb;
}

/* Mobile phones */
@mixin responsiveLayoutMobile
{
  @media (min-width: #{$min-mobile-size})
    and (max-width: #{$max-mobile-size})
    and (min-height: #{$min-mobile-size})
    and (max-height: #{$max-mobile-size})
    and (-webkit-min-device-pixel-ratio: 1)
    {
      @content;
    }
}

/* Normal tablets */
@mixin responsiveLayoutTablet
{
  @media (min-width: #{$min-tablet-size})
    and (max-width: #{$max-tablet-size})
    and (min-height: #{$min-tablet-size})
    and (max-height: #{$max-tablet-size})
    and (-webkit-min-device-pixel-ratio: 1)
  {
    @content;
  }
}

/* Big tablets and tablets in landscape mode */
@mixin responsiveLayoutBigTablet()
{
  @media (min-width: #{$min-tablet-size})
    and (max-width: #{$max-landscape-tablet-size})
    and (min-height: #{$min-tablet-size})
    and (max-height: #{$max-landscape-tablet-size})
    and (-webkit-min-device-pixel-ratio: 2)
    {
      @content;
    }
}

/* Nexus 7 */
@mixin responsiveLayoutNexusSeven()
{
  @media (min-width: #{$min-tablet-nexus-size})
    and (max-width: #{$max-tablet-nexus-size})
    and (min-height: #{$min-tablet-nexus-size})
    and (max-height: #{$max-tablet-nexus-size})
    and (-webkit-min-device-pixel-ratio: 1)
  {
    @content;
  }
}
